[buildout]
parts = eggs
        activate
        template
        modwsgi
        po2mo

develop = .
index = http://pypi.camptocamp.net/pypi
allow-hosts = pypi.camptocamp.net
find-links = http://pypi.camptocamp.net/internal-pypi/index/c2cgeoportal
    http://pypi.camptocamp.net/internal-pypi/index/tileforge
newest = false
prefer-final = true
versions = versions

# isolate ourself from the System Python
allowed-eggs-from-site-packages = osgeo.*
exec-sitecustomize = false

develop-eggs-directory = buildout/develop-eggs
eggs-directory = buildout/eggs
parts-directory = buildout/parts
bin-directory = buildout/bin

[versions]
# list of the dependencies versions
# (to be copied from the dumppickedversions output)


[vars]
# apache
instanceid = main
apache-entry-point = /
# urls

# database - not in this file.....
server_port = 6543
# the Unix user under which the modwsgi daemon processes are executed,
# can be overriden in development-specific buildout config files
modwsgi_user = www-data
# url-path where the instance must respond.
# default is '/${vars:instanceid}/wsgi/'.
apache-entry-point = /${vars:instanceid}/wsgi/
# cookie session secret
authtkt_secret = __import__('uuid').uuid4().hex
# database host
dbhost = localhost
# database port
dbport = 5432
# database name
db = this_is_a_dummy_db_name
# sqlalchemy schema
schema = webapp
# database parent schema
parent_schema =

[po2mo]
recipe = c2c.recipe.msgfmt
po-directory = aap/locale/


[eggs]
recipe = z3c.recipe.scripts
eggs = 
    aap
dependent-scripts = true
interpreter = python
initialization =
    import paste.script.command
    for egg in ['PasteScript', 'Pyramid']: paste.script.command.system_plugins.append(egg)

[activate]
recipe = evg.recipe.activate

[modwsgi]
recipe = collective.recipe.modwsgi
eggs = aap
config-file = ${buildout:directory}/production.ini

[template]
recipe = z3c.recipe.filetemplate
source-directory = .
exclude-directories = buildout
interpreted-options = authtkt_secret
interpreted-options = app_version = __import__('uuid').uuid4().hex[:5]
                      hostname = __import__('socket').gethostname()
                      hostname-digest = __import__('hashlib').md5(options.get('hostname')).hexdigest()

extends = vars


